{"version":3,"file":"npm.floating-ui.d75509f96f504f88707e.js","mappings":"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","sources":["webpack://publicgroups/./node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs","webpack://publicgroups/./node_modules/@floating-ui/core/dist/floating-ui.core.mjs","webpack://publicgroups/./node_modules/@floating-ui/utils/dist/floating-ui.utils.dom.mjs","webpack://publicgroups/./node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs","webpack://publicgroups/./node_modules/@floating-ui/react-dom/dist/floating-ui.react-dom.mjs"],"sourcesContent":["/**\n * Custom positioning reference element.\n * @see https://floating-ui.com/docs/virtual-elements\n */\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction getSideAxis(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  const {\n    x,\n    y,\n    width,\n    height\n  } = rect;\n  return {\n    width,\n    height,\n    top: y,\n    left: x,\n    right: x + width,\n    bottom: y + height,\n    x,\n    y\n  };\n}\n\nexport { alignments, clamp, createCoords, evaluate, expandPaddingObject, floor, getAlignment, getAlignmentAxis, getAlignmentSides, getAxisLength, getExpandedPlacements, getOppositeAlignmentPlacement, getOppositeAxis, getOppositeAxisPlacements, getOppositePlacement, getPaddingObject, getSide, getSideAxis, max, min, placements, rectToClientRect, round, sides };\n","import { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    x,\n    y,\n    width: rects.floating.width,\n    height: rects.floating.height\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements,\n      middlewareData\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. To ensure `shift()` continues to take action,\n    // a single reset is performed when this is true.\n    const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center !== offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n    return {\n      [axis]: coords[axis] + alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset - alignmentOffset,\n        ...(shouldAddOffset && {\n          alignmentOffset\n        })\n      },\n      reset: shouldAddOffset\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$arrow, _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n\n      // If a reset by the arrow was caused due to an alignment offset being\n      // added, we should skip any logic now since `flip()` has already done its\n      // work.\n      // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      const side = getSide(placement);\n      const initialSideAxis = getSideAxis(initialPlacement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      const hasFallbackAxisSideDirection = fallbackAxisSideDirection !== 'none';\n      if (!specifiedFallbackPlacements && hasFallbackAxisSideDirection) {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$filter2;\n                const placement = (_overflowsData$filter2 = overflowsData.filter(d => {\n                  if (hasFallbackAxisSideDirection) {\n                    const currentSideAxis = getSideAxis(d.placement);\n                    return currentSideAxis === initialSideAxis ||\n                    // Create a bias to the `y` side axis due to horizontal\n                    // reading directions favoring greater width.\n                    currentSideAxis === 'y';\n                  }\n                  return true;\n                }).map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$filter2[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getPaddingObject(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getSideAxis(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\n\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: rawValue.mainAxis || 0,\n    crossAxis: rawValue.crossAxis || 0,\n    alignmentAxis: rawValue.alignmentAxis\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      var _middlewareData$offse, _middlewareData$arrow;\n      const {\n        x,\n        y,\n        placement,\n        middlewareData\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n\n      // If the placement is the same and the arrow caused an alignment offset\n      // then we don't need to change the positioning coordinates.\n      if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: {\n          ...diffCoords,\n          placement\n        }\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y,\n          enabled: {\n            [mainAxis]: checkMainAxis,\n            [crossAxis]: checkCrossAxis\n          }\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = getSideAxis(placement);\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      var _state$middlewareData, _state$middlewareData2;\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const isYAxis = getSideAxis(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const maximumClippingHeight = height - overflow.top - overflow.bottom;\n      const maximumClippingWidth = width - overflow.left - overflow.right;\n      const overflowAvailableHeight = min(height - overflow[heightSide], maximumClippingHeight);\n      const overflowAvailableWidth = min(width - overflow[widthSide], maximumClippingWidth);\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if ((_state$middlewareData = state.middlewareData.shift) != null && _state$middlewareData.enabled.x) {\n        availableWidth = maximumClippingWidth;\n      }\n      if ((_state$middlewareData2 = state.middlewareData.shift) != null && _state$middlewareData2.enabled.y) {\n        availableHeight = maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };\n","function hasWindow() {\n  return typeof window !== 'undefined';\n}\nfunction getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  if (!hasWindow() || typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isTopLayer(element) {\n  return [':popover-open', ':modal'].some(selector => {\n    try {\n      return element.matches(selector);\n    } catch (e) {\n      return false;\n    }\n  });\n}\nfunction isContainingBlock(elementOrCss) {\n  const webkit = isWebKit();\n  const css = isElement(elementOrCss) ? getComputedStyle(elementOrCss) : elementOrCss;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  return css.transform !== 'none' || css.perspective !== 'none' || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else if (isTopLayer(currentNode)) {\n      return null;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.scrollX,\n    scrollTop: element.scrollY\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list, traverseIframes) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  if (traverseIframes === void 0) {\n    traverseIframes = true;\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    const frameElement = getFrameElement(win);\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], frameElement && traverseIframes ? getOverflowAncestors(frameElement) : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));\n}\nfunction getFrameElement(win) {\n  return win.parent && Object.getPrototypeOf(win.parent) ? win.frameElement : null;\n}\n\nexport { getComputedStyle, getContainingBlock, getDocumentElement, getFrameElement, getNearestOverflowAncestor, getNodeName, getNodeScroll, getOverflowAncestors, getParentNode, getWindow, isContainingBlock, isElement, isHTMLElement, isLastTraversableNode, isNode, isOverflowElement, isShadowRoot, isTableElement, isTopLayer, isWebKit };\n","import { rectToClientRect, detectOverflow as detectOverflow$1, offset as offset$1, autoPlacement as autoPlacement$1, shift as shift$1, flip as flip$1, size as size$1, hide as hide$1, arrow as arrow$1, inline as inline$1, limitShift as limitShift$1, computePosition as computePosition$1 } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle, isHTMLElement, isElement, getWindow, isWebKit, getFrameElement, getDocumentElement, isTopLayer, getNodeName, isOverflowElement, getNodeScroll, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentWin = win;\n    let currentIFrame = getFrameElement(currentWin);\n    while (currentIFrame && offsetParent && offsetWin !== currentWin) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentWin = getWindow(currentIFrame);\n      currentIFrame = getFrameElement(currentWin);\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isFixed = strategy === 'fixed';\n  const documentElement = getDocumentElement(offsetParent);\n  const topLayer = elements ? isTopLayer(elements.floating) : false;\n  if (offsetParent === documentElement || topLayer && isFixed) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\n// If <html> has a CSS width greater than the viewport, then this will be\n// incorrect for RTL.\nfunction getWindowScrollBarX(element, rect) {\n  const leftScroll = getNodeScroll(element).scrollLeft;\n  if (!rect) {\n    return getBoundingClientRect(getDocumentElement(element)).left + leftScroll;\n  }\n  return rect.left + leftScroll;\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      ...clippingAncestor,\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? isTopLayer(element) ? [] : getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  const {\n    width,\n    height\n  } = getCssDimensions(element);\n  return {\n    width,\n    height\n  };\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      // If the <body> scrollbar appears on the left (e.g. RTL systems). Use\n      // Firefox with layout.scrollbar.side = 3 in about:config to test this.\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  let htmlX = 0;\n  let htmlY = 0;\n  if (documentElement && !isOffsetParentAnElement && !isFixed) {\n    const htmlRect = documentElement.getBoundingClientRect();\n    htmlY = htmlRect.top + scroll.scrollTop;\n    htmlX = htmlRect.left + scroll.scrollLeft -\n    // RTL <body> scrollbar.\n    getWindowScrollBarX(documentElement, htmlRect);\n  }\n  const x = rect.left + scroll.scrollLeft - offsets.x - htmlX;\n  const y = rect.top + scroll.scrollTop - offsets.y - htmlY;\n  return {\n    x,\n    y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction isStaticPositioned(element) {\n  return getComputedStyle(element).position === 'static';\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  let rawOffsetParent = element.offsetParent;\n\n  // Firefox returns the <html> element as the offsetParent if it's non-static,\n  // while Chrome and Safari return the <body> element. The <body> element must\n  // be used to perform the correct calculations even if the <html> element is\n  // non-static.\n  if (getDocumentElement(element) === rawOffsetParent) {\n    rawOffsetParent = rawOffsetParent.ownerDocument.body;\n  }\n  return rawOffsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const win = getWindow(element);\n  if (isTopLayer(element)) {\n    return win;\n  }\n  if (!isHTMLElement(element)) {\n    let svgOffsetParent = getParentNode(element);\n    while (svgOffsetParent && !isLastTraversableNode(svgOffsetParent)) {\n      if (isElement(svgOffsetParent) && !isStaticPositioned(svgOffsetParent)) {\n        return svgOffsetParent;\n      }\n      svgOffsetParent = getParentNode(svgOffsetParent);\n    }\n    return win;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && isStaticPositioned(offsetParent)) {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && isLastTraversableNode(offsetParent) && isStaticPositioned(offsetParent) && !isContainingBlock(offsetParent)) {\n    return win;\n  }\n  return offsetParent || getContainingBlock(element) || win;\n}\n\nconst getElementRects = async function (data) {\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  const floatingDimensions = await getDimensionsFn(data.floating);\n  return {\n    reference: getRectRelativeToOffsetParent(data.reference, await getOffsetParentFn(data.floating), data.strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      width: floatingDimensions.width,\n      height: floatingDimensions.height\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    var _io;\n    clearTimeout(timeoutId);\n    (_io = io) == null || _io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = element.getBoundingClientRect();\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          // If the reference is clipped, the ratio is 0. Throttle the refresh\n          // to prevent an infinite loop of updates.\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 1000);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          var _resizeObserver;\n          (_resizeObserver = resizeObserver) == null || _resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _resizeObserver2;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo == null || cleanupIo();\n    (_resizeObserver2 = resizeObserver) == null || _resizeObserver2.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nconst detectOverflow = detectOverflow$1;\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = offset$1;\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = autoPlacement$1;\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = shift$1;\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = flip$1;\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = size$1;\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = hide$1;\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = arrow$1;\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = inline$1;\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = limitShift$1;\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { arrow, autoPlacement, autoUpdate, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, platform, shift, size };\n","import { computePosition, arrow as arrow$2, offset as offset$1, shift as shift$1, limitShift as limitShift$1, flip as flip$1, size as size$1, autoPlacement as autoPlacement$1, hide as hide$1, inline as inline$1 } from '@floating-ui/dom';\nexport { autoUpdate, computePosition, detectOverflow, getOverflowAncestors, platform } from '@floating-ui/dom';\nimport * as React from 'react';\nimport { useLayoutEffect, useEffect } from 'react';\nimport * as ReactDOM from 'react-dom';\n\nvar index = typeof document !== 'undefined' ? useLayoutEffect : useEffect;\n\n// Fork of `fast-deep-equal` that only does the comparisons we need and compares\n// functions\nfunction deepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (typeof a === 'function' && a.toString() === b.toString()) {\n    return true;\n  }\n  let length;\n  let i;\n  let keys;\n  if (a && b && typeof a === 'object') {\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length !== b.length) return false;\n      for (i = length; i-- !== 0;) {\n        if (!deepEqual(a[i], b[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) {\n      return false;\n    }\n    for (i = length; i-- !== 0;) {\n      if (!{}.hasOwnProperty.call(b, keys[i])) {\n        return false;\n      }\n    }\n    for (i = length; i-- !== 0;) {\n      const key = keys[i];\n      if (key === '_owner' && a.$$typeof) {\n        continue;\n      }\n      if (!deepEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return a !== a && b !== b;\n}\n\nfunction getDPR(element) {\n  if (typeof window === 'undefined') {\n    return 1;\n  }\n  const win = element.ownerDocument.defaultView || window;\n  return win.devicePixelRatio || 1;\n}\n\nfunction roundByDPR(element, value) {\n  const dpr = getDPR(element);\n  return Math.round(value * dpr) / dpr;\n}\n\nfunction useLatestRef(value) {\n  const ref = React.useRef(value);\n  index(() => {\n    ref.current = value;\n  });\n  return ref;\n}\n\n/**\n * Provides data to position a floating element.\n * @see https://floating-ui.com/docs/useFloating\n */\nfunction useFloating(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform,\n    elements: {\n      reference: externalReference,\n      floating: externalFloating\n    } = {},\n    transform = true,\n    whileElementsMounted,\n    open\n  } = options;\n  const [data, setData] = React.useState({\n    x: 0,\n    y: 0,\n    strategy,\n    placement,\n    middlewareData: {},\n    isPositioned: false\n  });\n  const [latestMiddleware, setLatestMiddleware] = React.useState(middleware);\n  if (!deepEqual(latestMiddleware, middleware)) {\n    setLatestMiddleware(middleware);\n  }\n  const [_reference, _setReference] = React.useState(null);\n  const [_floating, _setFloating] = React.useState(null);\n  const setReference = React.useCallback(node => {\n    if (node !== referenceRef.current) {\n      referenceRef.current = node;\n      _setReference(node);\n    }\n  }, []);\n  const setFloating = React.useCallback(node => {\n    if (node !== floatingRef.current) {\n      floatingRef.current = node;\n      _setFloating(node);\n    }\n  }, []);\n  const referenceEl = externalReference || _reference;\n  const floatingEl = externalFloating || _floating;\n  const referenceRef = React.useRef(null);\n  const floatingRef = React.useRef(null);\n  const dataRef = React.useRef(data);\n  const hasWhileElementsMounted = whileElementsMounted != null;\n  const whileElementsMountedRef = useLatestRef(whileElementsMounted);\n  const platformRef = useLatestRef(platform);\n  const openRef = useLatestRef(open);\n  const update = React.useCallback(() => {\n    if (!referenceRef.current || !floatingRef.current) {\n      return;\n    }\n    const config = {\n      placement,\n      strategy,\n      middleware: latestMiddleware\n    };\n    if (platformRef.current) {\n      config.platform = platformRef.current;\n    }\n    computePosition(referenceRef.current, floatingRef.current, config).then(data => {\n      const fullData = {\n        ...data,\n        // The floating element's position may be recomputed while it's closed\n        // but still mounted (such as when transitioning out). To ensure\n        // `isPositioned` will be `false` initially on the next open, avoid\n        // setting it to `true` when `open === false` (must be specified).\n        isPositioned: openRef.current !== false\n      };\n      if (isMountedRef.current && !deepEqual(dataRef.current, fullData)) {\n        dataRef.current = fullData;\n        ReactDOM.flushSync(() => {\n          setData(fullData);\n        });\n      }\n    });\n  }, [latestMiddleware, placement, strategy, platformRef, openRef]);\n  index(() => {\n    if (open === false && dataRef.current.isPositioned) {\n      dataRef.current.isPositioned = false;\n      setData(data => ({\n        ...data,\n        isPositioned: false\n      }));\n    }\n  }, [open]);\n  const isMountedRef = React.useRef(false);\n  index(() => {\n    isMountedRef.current = true;\n    return () => {\n      isMountedRef.current = false;\n    };\n  }, []);\n  index(() => {\n    if (referenceEl) referenceRef.current = referenceEl;\n    if (floatingEl) floatingRef.current = floatingEl;\n    if (referenceEl && floatingEl) {\n      if (whileElementsMountedRef.current) {\n        return whileElementsMountedRef.current(referenceEl, floatingEl, update);\n      }\n      update();\n    }\n  }, [referenceEl, floatingEl, update, whileElementsMountedRef, hasWhileElementsMounted]);\n  const refs = React.useMemo(() => ({\n    reference: referenceRef,\n    floating: floatingRef,\n    setReference,\n    setFloating\n  }), [setReference, setFloating]);\n  const elements = React.useMemo(() => ({\n    reference: referenceEl,\n    floating: floatingEl\n  }), [referenceEl, floatingEl]);\n  const floatingStyles = React.useMemo(() => {\n    const initialStyles = {\n      position: strategy,\n      left: 0,\n      top: 0\n    };\n    if (!elements.floating) {\n      return initialStyles;\n    }\n    const x = roundByDPR(elements.floating, data.x);\n    const y = roundByDPR(elements.floating, data.y);\n    if (transform) {\n      return {\n        ...initialStyles,\n        transform: \"translate(\" + x + \"px, \" + y + \"px)\",\n        ...(getDPR(elements.floating) >= 1.5 && {\n          willChange: 'transform'\n        })\n      };\n    }\n    return {\n      position: strategy,\n      left: x,\n      top: y\n    };\n  }, [strategy, transform, elements.floating, data.x, data.y]);\n  return React.useMemo(() => ({\n    ...data,\n    update,\n    refs,\n    elements,\n    floatingStyles\n  }), [data, update, refs, elements, floatingStyles]);\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * This wraps the core `arrow` middleware to allow React refs as the element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow$1 = options => {\n  function isRef(value) {\n    return {}.hasOwnProperty.call(value, 'current');\n  }\n  return {\n    name: 'arrow',\n    options,\n    fn(state) {\n      const {\n        element,\n        padding\n      } = typeof options === 'function' ? options(state) : options;\n      if (element && isRef(element)) {\n        if (element.current != null) {\n          return arrow$2({\n            element: element.current,\n            padding\n          }).fn(state);\n        }\n        return {};\n      }\n      if (element) {\n        return arrow$2({\n          element,\n          padding\n        }).fn(state);\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = (options, deps) => ({\n  ...offset$1(options),\n  options: [options, deps]\n});\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = (options, deps) => ({\n  ...shift$1(options),\n  options: [options, deps]\n});\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = (options, deps) => ({\n  ...limitShift$1(options),\n  options: [options, deps]\n});\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = (options, deps) => ({\n  ...flip$1(options),\n  options: [options, deps]\n});\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = (options, deps) => ({\n  ...size$1(options),\n  options: [options, deps]\n});\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = (options, deps) => ({\n  ...autoPlacement$1(options),\n  options: [options, deps]\n});\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = (options, deps) => ({\n  ...hide$1(options),\n  options: [options, deps]\n});\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = (options, deps) => ({\n  ...inline$1(options),\n  options: [options, deps]\n});\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * This wraps the core `arrow` middleware to allow React refs as the element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = (options, deps) => ({\n  ...arrow$1(options),\n  options: [options, deps]\n});\n\nexport { arrow, autoPlacement, flip, hide, inline, limitShift, offset, shift, size, useFloating };\n"],"names":["sides","Math","min","max","round","floor","createCoords","v","x","y","oppositeSideMap","left","right","bottom","top","oppositeAlignmentMap","start","end","clamp","value","param","placement","split","getOppositeAxis","axis","getAxisLength","includes","getAlignmentAxis","replace","alignment","getOppositePlacement","side","padding","expandPaddingObject","rect","width","height","computeCoordsFromPlacement","_ref","rtl","reference","floating","sideAxis","alignmentAxis","alignLength","isVertical","commonX","commonY","commonAlign","coords","async","detectOverflow","state","options","_await$platform$isEle","platform","rects","elements","strategy","boundary","rootBoundary","elementContext","altBoundary","paddingObject","element","clippingClientRect","getClippingRect","isElement","contextElement","getDocumentElement","offsetParent","getOffsetParent","offsetScale","getScale","elementClientRect","convertOffsetParentRelativeRectToViewportRelativeRect","getSideOffsets","overflow","isAnySideFullyClipped","some","hasWindow","window","getNodeName","node","isNode","nodeName","toLowerCase","getWindow","_node$ownerDocument","ownerDocument","defaultView","document","documentElement","Node","Element","isHTMLElement","HTMLElement","isShadowRoot","ShadowRoot","isOverflowElement","overflowX","overflowY","display","getComputedStyle","test","isTableElement","isTopLayer","selector","matches","e","isContainingBlock","elementOrCss","webkit","isWebKit","css","transform","perspective","containerType","backdropFilter","filter","willChange","contain","CSS","supports","isLastTraversableNode","getNodeScroll","scrollLeft","scrollTop","scrollX","scrollY","getParentNode","result","assignedSlot","parentNode","host","getNearestOverflowAncestor","body","getOverflowAncestors","list","traverseIframes","_node$ownerDocument2","scrollableAncestor","isBody","win","frameElement","getFrameElement","concat","visualViewport","parent","Object","getPrototypeOf","getCssDimensions","parseFloat","hasOffset","offsetWidth","offsetHeight","shouldFallback","$","unwrapElement","domElement","getBoundingClientRect","Number","isFinite","noOffsets","getVisualOffsets","offsetLeft","offsetTop","includeScale","isFixedStrategy","clientRect","scale","visualOffsets","isFixed","floatingOffsetParent","shouldAddVisualOffsets","offsetWin","currentWin","currentIFrame","iframeScale","iframeRect","clientLeft","paddingLeft","clientTop","paddingTop","getWindowScrollBarX","leftScroll","getClientRectFromClippingAncestor","clippingAncestor","html","clientWidth","clientHeight","visualViewportBased","getViewportRect","scroll","scrollWidth","scrollHeight","direction","getDocumentRect","getInnerBoundingClientRect","hasFixedPositionAncestor","stopNode","position","getRectRelativeToOffsetParent","isOffsetParentAnElement","offsets","offsetRect","htmlX","htmlY","htmlRect","isStaticPositioned","getTrueOffsetParent","polyfill","rawOffsetParent","svgOffsetParent","currentNode","getContainingBlock","topLayer","clippingAncestors","cache","cachedResult","get","el","currentContainingBlockComputedStyle","elementIsFixed","computedStyle","currentNodeIsContaining","ancestor","set","getClippingElementAncestors","this","_c","firstClippingAncestor","clippingRect","reduce","accRect","getElementRects","data","getOffsetParentFn","getDimensionsFn","getDimensions","floatingDimensions","getClientRects","Array","from","isRTL","autoUpdate","update","ancestorScroll","ancestorResize","elementResize","ResizeObserver","layoutShift","IntersectionObserver","animationFrame","referenceEl","ancestors","forEach","addEventListener","passive","cleanupIo","onMove","timeoutId","io","root","cleanup","_io","clearTimeout","disconnect","refresh","skip","threshold","rootMargin","isFirstUpdate","handleObserve","entries","ratio","intersectionRatio","setTimeout","observe","observeMove","frameId","reobserveFrame","resizeObserver","firstEntry","target","unobserve","cancelAnimationFrame","requestAnimationFrame","_resizeObserver","prevRefRect","frameLoop","nextRefRect","_resizeObserver2","removeEventListener","name","fn","_middlewareData$offse","_middlewareData$arrow","middlewareData","diffCoords","mainAxisMulti","crossAxisMulti","rawValue","mainAxis","crossAxis","convertValueToCoords","offset","arrow","alignmentOffset","checkMainAxis","checkCrossAxis","limiter","detectOverflowOptions","mainAxisCoord","crossAxisCoord","maxSide","limitedCoords","enabled","_middlewareData$flip","initialPlacement","fallbackPlacements","specifiedFallbackPlacements","fallbackStrategy","fallbackAxisSideDirection","flipAlignment","initialSideAxis","isBasePlacement","oppositePlacement","getExpandedPlacements","hasFallbackAxisSideDirection","push","isStart","lr","rl","tb","bt","getSideList","map","getOppositeAxisPlacements","placements","overflows","overflowsData","flip","length","mainAlignmentSide","every","_middlewareData$flip2","_overflowsData$filter","nextIndex","index","nextPlacement","reset","resetPlacement","d","sort","a","b","_overflowsData$filter2","currentSideAxis","acc","_state$middlewareData","_state$middlewareData2","apply","isYAxis","heightSide","widthSide","maximumClippingHeight","maximumClippingWidth","overflowAvailableHeight","overflowAvailableWidth","noShift","shift","availableHeight","availableWidth","xMin","xMax","yMin","yMax","nextDimensions","referenceHiddenOffsets","referenceHidden","escapedOffsets","escaped","arrowDimensions","minProp","maxProp","clientProp","endDiff","startDiff","arrowOffsetParent","clientSize","centerToReference","largestPossiblePadding","minPadding","maxPadding","min$1","center","shouldAddOffset","centerOffset","rawOffset","computedOffset","len","limitMin","limitMax","_middlewareData$offse2","isOriginSide","Map","mergedOptions","platformWithCache","config","middleware","validMiddleware","Boolean","statefulPlacement","resetCount","i","nextX","nextY","computePosition","useLayoutEffect","useEffect","deepEqual","toString","keys","isArray","hasOwnProperty","call","key","$$typeof","getDPR","devicePixelRatio","roundByDPR","dpr","useLatestRef","ref","current","useFloating","externalReference","externalFloating","whileElementsMounted","open","setData","isPositioned","latestMiddleware","setLatestMiddleware","_reference","_setReference","_floating","_setFloating","setReference","referenceRef","setFloating","floatingRef","floatingEl","dataRef","hasWhileElementsMounted","whileElementsMountedRef","platformRef","openRef","then","fullData","isMountedRef","refs","floatingStyles","initialStyles","arrow$1","deps","limitShift","size","hide"],"sourceRoot":""}